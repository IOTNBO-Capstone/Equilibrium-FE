describe('Outbound Page', () => {
  beforeEach(() => {
    cy.visit('http://localhost:3000/outbound')
  });

  it('Should have a thank you message', () => {
    cy.get('.thank-you')
      .should('exist')
      .contains('Thank you for viewing our application.')
  })

  it('Should have links to all of the creators\' Github and LinkedIn profiles', () => {
    cy.get('.ali')
      .should('exist')
      .get('.ali > h4')
      .should('exist')
      .contains('Ali Nix')
      .get('.ali > .github')
      .should('exist')
      .get('.ali > .github > .github-icon')
      .should('exist')
      .get('.ali > .github > .webLink')
      .should('exist')
      .get('.ali > .linkedin')
      .should('exist')
      .get('.ali > .linkedin > .linkedin-icon')
      .should('exist')
      .get('.ali > .linkedin > .webLink')
      .should('exist')

    cy.get('.candace')
      .should('exist')
      .get('.candace > h4')
      .should('exist')
      .contains('Candace Eckels')
      .get('.candace > .github')
      .should('exist')
      .get('.candace > .github > .github-icon')
      .should('exist')
      .get('.candace > .github > .webLink')
      .should('exist')
      .get('.candace > .linkedin')
      .should('exist')
      .get('.candace > .linkedin > .linkedin-icon')
      .should('exist')
      .get('.candace > .linkedin > .webLink')
      .should('exist')

    cy.get('.dana')
      .should('exist')
      .get('.dana > h4')
      .should('exist')
      .contains('Dana Chapman')
      .get('.dana > .github')
      .should('exist')
      .get('.dana > .github > .github-icon')
      .should('exist')
      .get('.dana > .github > .webLink')
      .should('exist')
      .get('.dana > .linkedin')
      .should('exist')
      .get('.dana > .linkedin > .linkedin-icon')
      .should('exist')
      .get('.dana > .linkedin > .webLink')
      .should('exist')

    cy.get('.emily')
      .should('exist')
      .get('.emily > h4')
      .should('exist')
      .contains('Emily Miles')
      .get('.emily > .github')
      .should('exist')
      .get('.emily > .github > .github-icon')
      .should('exist')
      .get('.emily > .github > .webLink')
      .should('exist')
      .get('.emily > .linkedin')
      .should('exist')
      .get('.emily > .linkedin > .linkedin-icon')
      .should('exist')
      .get('.emily > .linkedin > .webLink')
      .should('exist')

    cy.get('.taryn')
      .should('exist')
      .get('.taryn > h4')
      .should('exist')
      .contains('Taryn Orlemann')
      .get('.taryn > .github')
      .should('exist')
      .get('.taryn > .github > .github-icon')
      .should('exist')
      .get('.taryn > .github > .webLink')
      .should('exist')
      .get('.taryn > .linkedin')
      .should('exist')
      .get('.taryn > .linkedin > .linkedin-icon')
      .should('exist')
      .get('.taryn > .linkedin > .webLink')
      .should('exist')

    cy.get('.thomas')
      .should('exist')
      .get('.thomas > h4')
      .should('exist')
      .contains('Thomas Hayes')
      .get('.thomas > .github')
      .should('exist')
      .get('.thomas > .github > .github-icon')
      .should('exist')
      .get('.thomas > .github > .webLink')
      .should('exist')
      .get('.thomas > .linkedin')
      .should('exist')
      .get('.thomas > .linkedin > .linkedin-icon')
      .should('exist')
      .get('.thomas > .linkedin > .webLink')
      .should('exist')
    
    cy.get('.will')
      .should('exist')
      .get('.will > h4')
      .should('exist')
      .contains('Will Hobson')
      .get('.will > .github')
      .should('exist')
      .get('.will > .github > .github-icon')
      .should('exist')
      .get('.will > .github > .webLink')
      .should('exist')
      .get('.will > .linkedin')
      .should('exist')
      .get('.will > .linkedin > .linkedin-icon')
      .should('exist')
      .get('.will > .linkedin > .webLink')
      .should('exist')
  })

  it('Should be able to go back to the Landing Page', () => {
    cy.get('button')
      .click()
      cy.url().should('eq', 'http://localhost:3000/')
  })
})